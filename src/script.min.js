import*as THREE from"three";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";import{OBJLoader}from"three/examples/jsm/loaders/OBJLoader.js";const MAX_RETRIES=3;function getUrlParameter(name){return new URLSearchParams(window.location.search).get(name)}const modelPath=getUrlParameter("object")||`${import.meta.env.BASE_URL}models/d6fbd28b1af1_a_spherical_exoplan.obj`,texturePath=getUrlParameter("texture")||`${import.meta.env.BASE_URL}textures/d6fbd28b1af1_a_spherical_exoplan_texture_kd.jpg`,scene=new THREE.Scene;scene.background=null;const camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3);camera.position.set(0,0,2.5);const canvas=document.querySelector(".webgl"),renderer=new THREE.WebGLRenderer({canvas:canvas,antialias:!0,alpha:!0});renderer.setSize(window.innerWidth,window.innerHeight),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),renderer.setClearColor(0,0);const ambientLight=new THREE.AmbientLight(16777215,.6);scene.add(ambientLight);const directionalLight=new THREE.DirectionalLight(16777215,.8);directionalLight.position.set(5,10,7.5),scene.add(directionalLight);const controls=new OrbitControls(camera,renderer.domElement);function loadTextureWithRetry(url,retries=MAX_RETRIES){return new Promise(((resolve,reject)=>{const textureLoader=new THREE.TextureLoader;!function attemptLoad(retryCount){const texture=textureLoader.load(url,(()=>resolve(texture)),void 0,(error=>{console.warn(`Texture load failed, attempt ${retryCount+1}/${retries}`),retryCount<retries-1?attemptLoad(retryCount+1):reject(new Error("Failed to load texture after multiple attempts"))}))}(0)}))}function loadModelWithRetry(url,retries=MAX_RETRIES){return new Promise(((resolve,reject)=>{const loader=new OBJLoader;!function attemptLoad(retryCount){loader.load(url,(object=>resolve(object)),void 0,(error=>{console.warn(`Model load failed, attempt ${retryCount+1}/${retries}`),retryCount<retries-1?attemptLoad(retryCount+1):reject(new Error("Failed to load model after multiple attempts"))}))}(0)}))}async function loadAndDisplayModel(){try{const texture=await loadTextureWithRetry(texturePath),model=await loadModelWithRetry(modelPath);model.traverse((child=>{child.isMesh&&(child.material=new THREE.MeshStandardMaterial({map:texture,flatShading:!0}))})),model.position.set(0,0,0),scene.add(model),console.log("Model and texture loaded successfully.")}catch(error){console.error("Failed to load model or texture:",error)}}function animate(){controls.update(),renderer.render(scene,camera),requestAnimationFrame(animate)}controls.enableDamping=!0,controls.dampingFactor=.05,controls.enablePan=!1,controls.minDistance=1.5,controls.maxDistance=5,loadAndDisplayModel(),window.addEventListener("resize",(()=>{const width=window.innerWidth,height=window.innerHeight;camera.aspect=width/height,camera.updateProjectionMatrix(),renderer.setSize(width,height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))})),animate();